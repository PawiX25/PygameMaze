name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  create:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Pygame and PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pygame pyinstaller
      shell: bash

    - name: Build executable
      run: |
        pyinstaller --onefile game.py
      shell: bash

    - name: Rename executable
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          mv dist/game dist/game-linux
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          mv dist/game dist/game-macos
        else
          mv dist/game.exe dist/game-windows.exe
        fi
      shell: bash

    - name: Upload Linux build artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: game-linux
        path: dist/game-linux

    - name: Upload macOS build artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v2
      with:
        name: game-macos
        path: dist/game-macos

    - name: Upload Windows build artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: game-windows
        path: dist/game-windows.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Linux build artifact
      uses: actions/download-artifact@v2
      with:
        name: game-linux
        path: ./dist

    - name: Download macOS build artifact
      uses: actions/download-artifact@v2
      with:
        name: game-macos
        path: ./dist

    - name: Download Windows build artifact
      uses: actions/download-artifact@v2
      with:
        name: game-windows
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0-${{ github.run_number }}
        release_name: Release v1.0.0-${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game-linux
        asset_name: game-linux
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game-macos
        asset_name: game-macos
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game-windows.exe
        asset_name: game-windows.exe
        asset_content_type: application/octet-stream
